name: Smart Contracts CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # FIXED: Cache dependencies with proper restore-keys and only cache existing paths
    - name: Cache dependencies
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: |
          node_modules
          .yarn/cache
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    # Install dependencies - yarn will create the directories if they don't exist
    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Compile contracts
      run: yarn hardhat compile

    - name: Run tests
      run: yarn hardhat test

    - name: Run coverage
      run: yarn hardhat coverage

  deploy:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'

    # FIXED: Cache dependencies with proper configuration
    - name: Cache dependencies
      uses: actions/cache@v3
      id: cache-deps
      with:
        path: |
          node_modules
          .yarn/cache
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install --frozen-lockfile

    - name: Deploy contracts
      run: yarn hardhat deploy --network mainnet
      env:
        PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
        INFURA_API_KEY: ${{ secrets.INFURA_API_KEY }}